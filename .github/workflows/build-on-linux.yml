name: "Build On Linux"

on: # @see https://help.github.com/en/articles/events-that-trigger-workflows#webhook-events
  push:
    branches: # Array of patterns that match refs/heads
      - master # Push events on master branch
      - dev
      - main
    tags:
      - "*"

jobs:
  build: # job id, can be any string
    # Job name is Build And Publish
    name: Build
    # This job runs on Linux
    strategy:
      matrix:
        os: [ubuntu-latest]
        rust: [stable]
        target: [x86_64-unknown-linux-gnu]
    #aarch64-unknown-linux-gnu,
    #arm-unknown-linux-gnueabi,
    #armv7-unknown-linux-gnueabihf,
    #i686-unknown-linux-gnu,
    #mips-unknown-linux-gnu,
    #mipsel-unknown-linux-gnu,
    #mips64-unknown-linux-gnuabi64,
    #mips64el-unknown-linux-gnuabi64,
    #powerpc-unknown-linux-gnu,
    #powerpc64-unknown-linux-gnu,
    #powerpc64le-unknown-linux-gnu,
    #aarch64-unknown-linux-musl,
    #arm-unknown-linux-musleabihf,
    #arm-unknown-linux-musleabi,
    #armv7-unknown-linux-musleabihf,
    #i686-unknown-linux-musl,
    #mips-unknown-linux-musl,
    #mipsel-unknown-linux-musl,
    #x86_64-unknown-linux-musl,
    #aarch64-linux-android,
    #arm-linux-androideabi,
    #armv7-linux-androideabi,
    #i686-linux-android,
    #x86_64-linux-android,
    #x86_64-unknown-netbsd,
    #x86_64-unknown-freebsd,
    #x86_64-sun-solaris,
    # see https://github.com/rust-embedded/cross
    # Github action is run under a docker pod but cross need docker service
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}
          override: true
          default: true
          components: "rustfmt, clippy, cargo, rust-docs"
      - name: Format and lint
        if: ${{ matrix.os == 'ubuntu-latest' }}
        shell: bash
        run: |
          cargo fmt --all -- --check
          cargo clippy
      - name: Release build
        uses: actions-rs/cargo@v1
        if: ${{ matrix.os != 'ubuntu-latest' }}
        with:
          command: build
          args: --release --all-features
      - name: Debug build & test
        uses: actions-rs/cargo@v1
        if: ${{ matrix.os == 'ubuntu-latest' }}
        with:
          command: test
          args: --all-features
        env:
          RUSTFLAGS: "-C link-dead-code"
      - name: Cache prebuilt and cargo
        uses: actions/cache@v2
        with:
          path: |
            ~/prebuilt
            ~/.cargo
            !~/prebuilt/exclude
          key: ${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
      - name: Build
        shell: bash
        run: |
          if [[ -e "target/${{ matrix.target }}/release/etc" ]]; then
            rm -rf "target/${{ matrix.target }}/release/etc";
          fi
          if [[ -e "target/${{ matrix.target }}/release/tools" ]]; then
            rm -rf "target/${{ matrix.target }}/release/tools";
          fi
          cp -rf etc tools "target/${{ matrix.target }}/release"/ ;
          cd "target/${{ matrix.target }}/release/";
          mkdir -p bin;
          if [[ -e wxwork_robotd ]]; then
            cp -f wxwork_robotd bin/wxwork_robotd;
          else
            cp -f wxwork_robotd* bin/;
          fi
          tar -zcvf ${{ matrix.target }}.tar.gz etc bin tools;
          cp -f ../../../Dockerfile ./;
          if [[ "${{ matrix.target }}" == "x86_64-unknown-linux-musl" ]] && [[ "xtag" != "x$GITHUB_EVENT_NAME" ]]; then
            TAG_NAME=${GITHUB_REF//*\/};
            echo "Trigger by tag -> $TAG_NAME";
            which docker || true;
            # echo "$DOCKER_TOKEN" | docker login -u "owt5008137" --password-stdin docker.io
            # docker build --force-rm --tag docker.io/owt5008137/wxwork_robotd:latest .
            # docker tag docker.io/owt5008137/wxwork_robotd:latest docker.io/owt5008137/wxwork_robotd:$TAG_NAME
            # docker push docker.io/owt5008137/wxwork_robotd:latest
            # docker push docker.io/owt5008137/wxwork_robotd:$TAG_NAME
          else
            echo "Trigger by $GITHUB_EVENT_NAME -> $GITHUB_REF";
          fi
          cd ../../..;
          mv -f "target/${{ matrix.target }}/release/${{ matrix.target }}.tar.gz" ./;
