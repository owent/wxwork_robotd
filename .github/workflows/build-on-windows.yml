name: "Build On Windows"

on: # @see https://help.github.com/en/articles/events-that-trigger-workflows#webhook-events
  push:
    branches: # Array of patterns that match refs/heads
      - master # Push events on master branch
      - dev
    tags:
      - "*"

jobs:
  build: # job id, can be any string
    # Job name is Build And Publish
    name: Build
    # This job runs on Linux
    strategy:
      matrix:
        os: [windows-latest]
        rust: [stable]
        target: [x86_64-pc-windows-msvc, i686-pc-windows-msvc]
    #, x86_64-pc-windows-gnu
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}
          override: true
          default: true
          components: "rustfmt, clippy, cargo, rust-docs"
      - name: Build
        shell: pwsh
        run: |
          if ("${{matrix.target}}" -eq "x86_64-pc-windows-gnu") {
            cargo install xargo --force ;
            cargo install cross --force ;
            cross build --release --verbose --target ${{ matrix.target }}
          } else {
            cargo build --release --verbose --target ${{ matrix.target }}
          }
          Copy-Item -Force -Recurse etc "./target/${{ matrix.target }}/release/"
          Copy-Item -Force -Recurse tools "./target/${{ matrix.target }}/release/"
          cd "./target/${{ matrix.target }}/release/"
          mkdir bin
          Copy-Item -Force wxwork_robotd.exe bin/
          if ( Test-Path "${{ matrix.target }}.zip" ) { Remove-Item -Force "${{ matrix.target }}.zip" }
          Compress-Archive -DestinationPath "${{ matrix.target }}.zip" -Path etc,bin,tools
          Get-ChildItem
          Get-ChildItem -Recurse etc,bin,tools
          Copy-Item -Force "${{ matrix.target }}.zip" ../../../
          cd ../../../
      - name: Run tests
        shell: pwsh
        run: |
          cargo test --release --verbose --target ${{ matrix.target }}
