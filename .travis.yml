language: rust
rust: stable
services: docker

env:
  global:
    - CRATE_NAME=wxwork_robotd
    - DISABLE_TESTS=1
    - RUST_BACKTRACE=1
    - LANG="zh_CN.UTF-8"
    - USING_CROSS=0
    - USING_SYSTEM_ALLOC=0
    - CROSS_DOCKER_IN_DOCKER=true

matrix:
  include:
    # OSX
    #- os: osx
    #  env: USING_TRUST=1 TARGET=i686-apple-darwin
    - os: osx
      env: USING_SYSTEM_ALLOC=0 USING_CROSS=0 TARGET=x86_64-apple-darwin
    # ios
    # - env: USING_TRUST=1 TARGET=aarch64-apple-ios
    #   os: osx
    # - env: USING_TRUST=1 TARGET=armv7-apple-ios
    #   os: osx
    # - env: USING_TRUST=1 TARGET=armv7s-apple-ios
    #   os: osx
    # - env: USING_TRUST=1 TARGET=i386-apple-ios
    #   os: osx
    # - env: USING_TRUST=1 TARGET=x86_64-apple-ios
    #   os: osx
    # linux
    # - os: linux
    #   dist: xenial
    #   sudo: required
    #   env: USING_SYSTEM_ALLOC=1 USING_CROSS=1 TARGET=aarch64-unknown-linux-gnu
    # - os: linux
    #   dist: xenial
    #   sudo: required
    #   env: USING_SYSTEM_ALLOC=1 USING_CROSS=1 TARGET=arm-unknown-linux-gnueabi
    # - os: linux
    #   dist: xenial
    #   sudo: required
    #   env: USING_SYSTEM_ALLOC=1 USING_CROSS=1 TARGET=armv7-unknown-linux-gnueabihf
    # - os: linux
    #   dist: xenial
    #   sudo: required
    #   env: USING_SYSTEM_ALLOC=0 USING_CROSS=1 TARGET=i686-unknown-linux-gnu
    # - os: linux
    #   dist: xenial
    #   sudo: required
    #   env: USING_CROSS=1 TARGET=mips-unknown-linux-gnu
    # - os: linux
    #   dist: xenial
    #   sudo: required
    #   env: USING_CROSS=1 TARGET=mipsel-unknown-linux-gnu
    # - os: linux
    #   dist: xenial
    #   sudo: required
    #   env: USING_CROSS=1 TARGET=mips64-unknown-linux-gnuabi64
    # - os: linux
    #   dist: xenial
    #   sudo: required
    #   env: USING_CROSS=1 TARGET=mips64el-unknown-linux-gnuabi64
    # - os: linux
    #   dist: xenial
    #   sudo: required
    #   env: USING_CROSS=1 TARGET=powerpc-unknown-linux-gnu
    # - os: linux
    #   dist: xenial
    #   sudo: required
    #   env: USING_CROSS=1 TARGET=powerpc64-unknown-linux-gnu
    # - os: linux
    #   dist: xenial
    #   sudo: required
    #   env: USING_CROSS=1 TARGET=powerpc64le-unknown-linux-gnu
    # - os: linux
    #   dist: xenial
    #   sudo: required
    #   env: USING_SYSTEM_ALLOC=0 USING_CROSS=0 TARGET=x86_64-unknown-linux-gnu
      sudo: required
      env: USING_CROSS=1 TARGET=aarch64-unknown-linux-musl
    - os: linux
      sudo: required
      env: USING_CROSS=1 TARGET=arm-unknown-linux-musleabihf
    - os: linux
      sudo: required
      env: USING_CROSS=1 TARGET=arm-unknown-linux-musleabi
    - os: linux
      sudo: required
      env: USING_CROSS=1 TARGET=armv7-unknown-linux-musleabihf
    # linux-musl
    - os: linux
      sudo: required
      env: USING_SYSTEM_ALLOC=0 USING_CROSS=1 TARGET=i686-unknown-linux-musl
    # - os: linux
    #   dist: xenial
    #   sudo: required
    #   env: USING_CROSS=1 TARGET=mips-unknown-linux-musl
    # - os: linux
    #   dist: xenial
    #   sudo: required
    #   env: USING_CROSS=1 TARGET=mipsel-unknown-linux-musl
    - os: linux
      sudo: required
      env: USING_SYSTEM_ALLOC=0 USING_CROSS=1 TARGET=x86_64-unknown-linux-musl
    # Android
    - os: linux
      sudo: required
      env: USING_CROSS=1 TARGET=aarch64-linux-android
    - os: linux
      sudo: required
      env: USING_SYSTEM_ALLOC=1 USING_CROSS=1 TARGET=arm-linux-androideabi
    - os: linux
      sudo: required
      env: USING_SYSTEM_ALLOC=1 USING_CROSS=1 TARGET=armv7-linux-androideabi
    - os: linux
      sudo: required
      env: USING_SYSTEM_ALLOC=1 USING_CROSS=1 TARGET=i686-linux-android
    - os: linux
      sudo: required
      env: USING_SYSTEM_ALLOC=1 USING_CROSS=1 TARGET=x86_64-linux-android
    # BSD
    - os: linux
      sudo: required
      env: USING_SYSTEM_ALLOC=0 USING_CROSS=1 TARGET=x86_64-unknown-netbsd
    # - os: linux
    #   dist: xenial
    #   sudo: required
    #   env: USING_SYSTEM_ALLOC=0 USING_CROSS=1 TARGET=x86_64-unknown-freebsd
    # Solaris
    # - os: linux
    #   dist: xenial
    #   sudo: required
    #   env: USING_SYSTEM_ALLOC=0 USING_CROSS=1 TARGET=x86_64-sun-solaris
    ## Windows
    # - env: TARGET=x86_64-pc-windows-gnu

before_install:
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then ulimit -a; sysctl -a; sudo apt-get -qq update; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew update; fi
  - rustup self update;
  - rustup update --force stable;
  - if [[ $USING_CROSS -ne 0 ]]; then

    cargo install xargo --force;

    cargo install cross --force;

    else

    rustup target add $TARGET ;

    rustup toolchain install stable-$TARGET ;

    fi

#install:
#  - if [[ $USING_TRUST -ne 0 ]]; then
#
#    bash ci/install.sh ;
#
#    source ~/.cargo/env || true ;
#
#    fi

script: |
  if [[ $USING_SYSTEM_ALLOC -eq 0 ]]; then
    BUILD_WITH_SYSTEM_ALLOC="";
    else
    BUILD_WITH_SYSTEM_ALLOC=" --features system-alloc";
  fi

  if [[ $USING_CROSS -ne 0 ]]; then
    cross build --target $TARGET --release $BUILD_WITH_SYSTEM_ALLOC ;
  else
    cargo build --release --target $TARGET $BUILD_WITH_SYSTEM_ALLOC ;
  fi

  if [[ -e "target/$TARGET/release/etc" ]]; then
    rm -rf "target/$TARGET/release/etc";
  fi

  if [[ -e "target/$TARGET/release/tools" ]]; then
    rm -rf "target/$TARGET/release/tools";
  fi

  cp -rf etc tools "target/$TARGET/release"/ ;
  cd "target/$TARGET/release/";
  mkdir -p bin;

  if [[ -e wxwork_robotd ]]; then
    cp -f wxwork_robotd bin/wxwork_robotd;
  else
    cp -f wxwork_robotd* bin/;
  fi

  tar -zcvf $TARGET.tar.gz etc bin tools;
  cp -f ../../../Dockerfile ./;
  if [[ "$TARGET" == "x86_64-unknown-linux-musl" ]] && [[ "x" != "x$TRAVIS_TAG" ]]; then
    echo "$DOCKER_TOKEN" | docker login -u "owt5008137" --password-stdin docker.io
    docker build --force-rm --tag docker.io/owt5008137/wxwork_robotd:latest .
    docker tag docker.io/owt5008137/wxwork_robotd:latest docker.io/owt5008137/wxwork_robotd:$TRAVIS_TAG
    docker push docker.io/owt5008137/wxwork_robotd:latest
    docker push docker.io/owt5008137/wxwork_robotd:$TRAVIS_TAG
  fi

  cd ../../..;
  mv -f "target/$TARGET/release/$TARGET.tar.gz" ./;

cache: cargo

deploy:
  provider: releases
  api_key:
    secure: FpssIbMGTjAG4Ny8TYIKn8vmEhkODR2Bqvx46k8/LDRwDRW+CHilULz8KvdZ66CELCjF9n2a88Msnl5B1PVviLX0H+mw8yqqM04gE/BN2l7cNGR941tBlKnGfnT0CPGuLBX+zKETy+9k8FeluYNDwlCklbI2hnGly2F9vpK55Z337TlTd6LFkJhElv6v3fmGH8LRGV/cen5He7NzgmnFq/lqnNUdE9Cg8LQ8tLc8fOHOAWJAmQzP/stKSoHZWGwp1rgc36im4FSkSrF+2k4vK2GurbTTBjOeI2/wyUxcii29t1ACTQMVCNVO27dUoi4F0jEOzbtX5JYsNO+GL3kFj6FeIGAVo8ogoqDfEEmeAuQA+95SWh/m9VVAWTvdIEbUEH3rxHGs0CAzkrxJOxVKgje+cA+ZRz1DmVle74icLL5tV6pQoHeG2iii3e8tpmmu42ovrp9z5qKSrFyVEmQXyN1fs6T8/t8KL4/1dL0gwmuKNdaXLo8TA8jRCJZNdamhtoa1NnrIoy+XPwoD4/su3s6hyBznvNwki07yIcprCc6ubKipj86KLdbhtkaJlIBR+D98jb1b8ngE2Y+OhsPk5DnbPERn7NbR3bP3KanXw9i/h23R9OkoSwku1hio/n4nx2p9Hjn8wICrtuVCSJnf+SVlRT5uzumig1VgDxWLMaw=
  file_glob: true
  file: "*.tar.gz"
  skip_cleanup: true
  overwrite: true
  draft: true
  on:
    all_branches: true
    tags: true

notifications:
  email:
    recipients:
      - admin@owent.net
      - owt5008137@live.com
    on_success: never
    on_failure: never
  irc:
    template:
      - "%{repository}/%{branch} (%{commit} - %{author}): %{build_url}: %{message}"
